Started by user lior swisa
Obtained Jenkinsfile from git https://github.com/photop33/World-Game
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\Users\l1313\.jenkins\workspace\Game-World
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git.exe rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > git.exe config remote.origin.url https://github.com/photop33/World-Game # timeout=10
Fetching upstream changes from https://github.com/photop33/World-Game
 > git.exe --version # timeout=10
 > git --version # 'git version 2.30.0.windows.2'
 > git.exe fetch --tags --force --progress -- https://github.com/photop33/World-Game +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git.exe rev-parse "refs/remotes/origin/master^{commit}" # timeout=10
Checking out Revision 7275e1fcb71bbc5652ec4c3a9a2ec89e46b0d1d7 (refs/remotes/origin/master)
 > git.exe config core.sparsecheckout # timeout=10
 > git.exe checkout -f 7275e1fcb71bbc5652ec4c3a9a2ec89e46b0d1d7 # timeout=10
Commit message: "Update Jenkinsfile"
 > git.exe rev-list --no-walk 427a7090f26ddc0dfd1924bf26d1bf5ac679930e # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (build)
[Pipeline] script
[Pipeline] {
[Pipeline] bat

C:\Users\l1313\.jenkins\workspace\Game-World>docker build -t 20 . 
Sending build context to Docker daemon  450.6kB

Step 1/7 : FROM python:latest
 ---> 2a93c239d591
Step 2/7 : COPY MainScore.py /
 ---> Using cache
 ---> fe34c7998796
Step 3/7 : COPY Utils.py /
 ---> Using cache
 ---> 31fa783727e5
Step 4/7 : COPY Score.py /
 ---> Using cache
 ---> 1a94bdaec501
Step 5/7 : RUN pip install pymysql
 ---> Using cache
 ---> 85ff0f5a39bb
Step 6/7 : RUN pip install flask
 ---> Using cache
 ---> fe426337c6a2
Step 7/7 : CMD [ "python", "MainScore.py" ]
 ---> Using cache
 ---> 39ead2abc572
Successfully built 39ead2abc572
Successfully tagged 20:latest
SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have '-rwxr-xr-x' permissions. It is recommended to double check and reset permissions for sensitive files and directories.
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (run)
[Pipeline] script
[Pipeline] {
[Pipeline] bat

C:\Users\l1313\.jenkins\workspace\Game-World>start/min docker run -p 8777:8080 20 
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (e2e)
[Pipeline] script
[Pipeline] {
[Pipeline] bat

C:\Users\l1313\.jenkins\workspace\Game-World>python C:\Users\l1313\.jenkins\workspace\Game-World\e2e.py 
True
0
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] bat

C:\Users\l1313\.jenkins\workspace\Game-World>echo "Fail!"; exit 1 
"Fail!"; exit 1
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
This will always run
[Pipeline] echo
This will run only if the state of the Pipeline has changed
[Pipeline] echo
For example, if the Pipeline was previously failing but is now successful
[Pipeline] echo
This will run only if successful
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
